INFO:__main__:
=== Problem 4: Shuffle Partition Issue ===
INFO:__main__:
Bad approach - too few shuffle partitions:
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[id#0L], functions=[count(1)])
   +- Exchange hashpartitioning(id#0L, 2), ENSURE_REQUIREMENTS, [plan_id=47]
      +- HashAggregate(keys=[id#0L], functions=[partial_count(1)])
         +- Project [id#0L]
            +- Scan ExistingRDD[id#0L,value#1L]


INFO:__main__:
Issue Time taken: 0.16 seconds
INFO:__main__:
Solution - optimal shuffle partitions:
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[id#19L], functions=[count(1)])
   +- Exchange hashpartitioning(id#19L, 200), ENSURE_REQUIREMENTS, [plan_id=64]
      +- HashAggregate(keys=[id#19L], functions=[partial_count(1)])
         +- Project [id#19L]
            +- Scan ExistingRDD[id#19L,value#20L]


INFO:__main__:
Solution Time taken: 0.06 seconds
INFO:__main__:
=== End of Problem 4: Shuffle Partition Issue ===
INFO:__main__:
=== Problem 4: Shuffle Partition Issue ===
INFO:__main__:
Bad approach - too few shuffle partitions:
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[id#0L], functions=[count(1)])
   +- Exchange hashpartitioning(id#0L, 2), ENSURE_REQUIREMENTS, [plan_id=47]
      +- HashAggregate(keys=[id#0L], functions=[partial_count(1)])
         +- Project [id#0L]
            +- Scan ExistingRDD[id#0L,value#1L]


INFO:__main__:
Issue Time taken: 0.13 seconds
INFO:__main__:
Solution - optimal shuffle partitions:
== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[id#19L], functions=[count(1)])
   +- Exchange hashpartitioning(id#19L, 200), ENSURE_REQUIREMENTS, [plan_id=64]
      +- HashAggregate(keys=[id#19L], functions=[partial_count(1)])
         +- Project [id#19L]
            +- Scan ExistingRDD[id#19L,value#20L]


INFO:__main__:
Solution Time taken: 0.04 seconds
INFO:__main__:
=== End of Problem 4: Shuffle Partition Issue ===
